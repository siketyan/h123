name: Rust

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - published

env:
  CARGO_TERM_COLOR: always
  ARTIFACT_PREFIX: h123

jobs:
  checks:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: Swatinem/rust-cache@v2

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt,clippy

      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ github.token }}
          args: --all-features

      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --check

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

  build:
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
          - aarch64-apple-darwin
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
        include:
          - target: x86_64-pc-windows-msvc
            host: windows-2022
            artifact_suffix: .exe
          - target: x86_64-apple-darwin
            host: macos-12
          - target: aarch64-apple-darwin
            host: macos-12
          - target: x86_64-unknown-linux-gnu
            host: ubuntu-22.04
          - target: aarch64-unknown-linux-gnu
            host: ubuntu-22.04
            cross: true
    runs-on: ${{ matrix.host }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      - id: cache-key
        run: echo "key=$(echo '${{ toJSON(matrix) }}' | shasum -a 256)" >> $GITHUB_OUTPUT

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ steps.cache-key.outputs.key }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target '${{ matrix.target }}'
          use-cross: ${{ matrix.cross }}

      - name: Compress artifacts into .tar.gz file
        run: tar -C ./target/${{ matrix.target }}/release -czf ${{ env.ARTIFACT_PREFIX }}-${{ matrix.target }}.tar.gz ${{ env.ARTIFACT_PREFIX }}${{ matrix.artifact_suffix }}

      - uses: actions/upload-artifact@v3
        with:
          path: ${{ env.ARTIFACT_PREFIX }}-${{ matrix.target }}.tar.gz

      - uses: svenstaro/upload-release-action@v2
        if: ${{ github.event_name == 'release' }}
        with:
          file: ${{ env.ARTIFACT_PREFIX }}-${{ matrix.target }}.tar.gz
          overwrite: true
